<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.board.dao.IBoardDAO">
	<sql id="joinFrag">
		FROM
	    BOARD_JSP LEFT OUTER JOIN ATTATCH ON (BOARD_JSP.BO_NO = ATTATCH.BO_NO)
	    LEFT OUTER JOIN REPLY ON (BOARD_JSP.BO_NO = REPLY.BO_NO)
	</sql>
		<sql id="searchFrag">
		<where>
		    <if test="searchVO!=null">
		    	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.searchWord)">
		    		<choose>
		    			<when test="'title'.equals(searchVO.searchType)">
			    			INSTR(BO_TITLE, #{searchVO.searchWord}) > 0
		    			</when>
		    			<when test="'writer'.equals(searchVO.searchType)">
			    			INSTR(BO_WRITER, #{searchVO.searchWord}) > 0
		    			</when>
		    			<when test="'content'.equals(searchVO.searchType)">
			    			INSTR(BO_CONTENT, #{searchVO.searchWord}) > 0
		    			</when>
		    			<otherwise>
			    			INSTR(BO_TITLE, #{searchVO.searchWord}) > 0
			    			OR INSTR(BO_WRITER, #{searchVO.searchWord}) > 0
			    			OR INSTR(BO_CONTENT, #{searchVO.searchWord}) > 0
		    			</otherwise>
		    		</choose>
		    	</if>
		    </if>
	    </where>
	</sql>

	<select id="selectBoardCount" resultType="int" parameterType="PagingVO">
		SELECT COUNT(*)
		<include refid="joinFrag"/>
		<include refid="searchFrag"/>
	</select>
	
	<select id="selectBoardList" resultType="BoardVO" parameterType="PagingVO">
		SELECT B.*
		FROM(
		SELECT A.*, ROWNUM RN
		FROM (
			SELECT
			    BO_NO,    BO_TITLE,    BO_WRITER,
			    BO_DATE,  BO_HIT,    BO_LIKE, BO_MAIL
			FROM   BOARD_JSP
			<include refid="searchFrag" />
			ORDER BY BO_NO DESC
		)	A	) B
		WHERE RN BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<insert id="insertBoard" parameterType="boardVO">
		<selectKey resultType="int" keyProperty="bo_no" order="BEFORE">
			SELECT NVL(MAX(BO_NO), 0)+1
			FROM BOARD_JSP
		</selectKey>
		INSERT INTO BOARD_JSP (
		    BO_NO,    BO_TITLE,    BO_WRITER,
		    BO_PASS,    BO_CONTENT,    BO_DATE,
		    BO_IP,	    BO_MAIL
		) VALUES (
		    #{bo_no},    #{bo_title},    #{bo_writer},
		    #{bo_pass},  #{bo_content},    SYSDATE,
		    #{bo_ip},	 #{bo_mail,jdbcType=VARCHAR}
		)
	</insert>
	
	
	<resultMap type="BoardVO" id="boardMap" autoMapping="true">
		<id property="bo_no" column="BONO"/> <!-- 같은 게시물번호 기준으로 여러 행이 나올 때 (댓글,첨부파일) 그 해당번호 상세조회에 넣어줌-->
		<!-- BoardVO에 BO_NO는 채워지고 AttatchVO에 BO_NO가 채워지지 않게 -->
		<collection property="attatchList" javaType="java.util.List"
			ofType="AttatchVO" autoMapping="true"/>	
		<collection property="replyList" javaType="java.util.List"
			ofType="ReplyVO" autoMapping="true"/>	
	</resultMap>
	<select id="selectBoard" parameterType="int" resultMap="boardMap">
		SELECT
	    BOARD_JSP.BO_NO BONO, 
	    BO_PASS,
	    BO_TITLE,
	    BO_WRITER,
	    BO_CONTENT,
	    BO_DATE,
	    BO_HIT,
	    BO_LIKE,
	    ATT_NO,  ATT_SAVENAME,  ATT_FILENAME,
	    ATT_SIZE,  ATT_FANCY,  ATT_MIME,
	    REP_NO, REP_DATE, REP_WRITER, REP_CONTENT
	<include refid="joinFrag"/>
	WHERE BOARD_JSP.BO_NO = #{bo_no}
	
	</select>



	<update id="updateBoard" parameterType="boardVO">
	UPDATE BOARD_JSP
    SET
       BO_TITLE = #{bo_title},
       BO_CONTENT = #{bo_content},
       BO_MAIL = #{bo_mail}
     WHERE BO_NO = #{bo_no} 
	</update>
	
	
	<update id="deleteBoard" parameterType="boardVO" statementType="CALLABLE">  
	<!-- function이나 프로시저는 callable로! 절차적인 쿼리로 바꿔줌?  프로시저 이용해서 자식,부모 컬럼 지움 
		in ,out바운드는 자바타입 명시 꼭 -->
		{<!-- 익명블럭 -->
			CALL DELETEBOARD(#{bo_no,mode=IN,javaType=INTEGER}, #{rowcnt,mode=OUT,jdbcType=INTEGER}) 
		} 
	</update>
	
	<update id="incrementHit" parameterType="int">
		UPDATE BOARD_JSP
		SET
		BO_HIT = BO_HIT + 1
		WHERE BO_NO = #{bo_no}
	</update>
	
	<update id="incrementLike" parameterType="int">
		UPDATE BOARD_JSP
		SET
		BO_LIKE = BO_LIKE + 1
		WHERE BO_NO = #{bo_no}
	</update>
</mapper>